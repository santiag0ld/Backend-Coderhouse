<!DOCTYPE html>
<html>
<head>
    <title>Admin Panel - Manage Users</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
</head>
<body>
    <div class="container">
        <h1>Manage Users</h1>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#each users}}
                <tr>
                    <td>{{this.first_name}}</td>
                    <td>{{this.last_name}}</td>
                    <td>{{this.email}}</td>
                    <td>
                        <button class="btn btn-info change-role-btn" data-user-id="{{this._id}}" data-current-role="{{this.role}}">Change Role</button>
                    </td>
                    <td>
                        <button class="btn btn-danger delete-user-btn" data-user-id="{{this._id}}">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        // Cambiar el rol del usuario
        const changeRoleButtons = document.querySelectorAll('.change-role-btn');
        changeRoleButtons.forEach(button => {
            button.addEventListener('click', async function(event) {
                const userId = this.getAttribute('data-user-id');
                const currentRole = this.getAttribute('data-current-role');

                // Determinar el nuevo rol según el rol actual
                const newRole = (currentRole === 'user') ? 'premium' : 'user';

                try {
                    const response = await fetch(`/api/session/premium/${userId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ newRole })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        Swal.fire({
                            icon: 'success',
                            title: 'Éxito',
                            text: data.message
                        });
                        // Actualizar el atributo `data-current-role` del botón
                        this.setAttribute('data-current-role', newRole);
                    } else {
                        const data = await response.json();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message
                    });
                }
            });
        })

            // Eliminar el usuario
            const deleteButtons = document.querySelectorAll('.delete-user-btn');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async function(event) {
                    const userId = this.getAttribute('data-user-id');
                    try {
                        const response = await fetch(`/api/session/users/${userId}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            const data = await response.json();
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: data.message
                            });
                            // Refrescar la página para mostrar los cambios
                            window.location.reload();
                        } else {
                            const data = await response.json();
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>